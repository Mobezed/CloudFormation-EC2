{
	"AWSTemplateFormatVersion": "2017-08-12",
	"Description": "Ubuntu 14 - Apache2 webserver with a webpage.",
	"Parameters": {
		"InstanceType": {
			"Description": "Type of EC2 instance to launch",
			"Type": "String",
			"Default": "t2.micro"
		},
		"WebServerPort": {
			"Description": "TCP/IP port of the web server",
			"Type": "String",
			"Default": "80"
		},
		"KeyName": {
			"Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
			"Type": "AWS::EC2::KeyPair::KeyName",
			"ConstraintDescription": "must be the name of an existing EC2 KeyPair."
		},
		"SSHLocation": {
			"Description": " The IP address range that can be used to SSH to the EC2 instances",
			"Type": "String",
			"MinLength": "9",
			"MaxLength": "18",
			"Default": "0.0.0.0/0",
			"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
			"ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
		}
	},
	"Mappings": {
		"AWSInstanceType2Arch": {
			"t2.micro": {
				"Arch": "64"
			}
		},
		"AWSRegionArch2AMI": {
			"us-east-1": {
				"64": "ami-841f46ff"
			}
		}
	},
	"Resources": {
		"myS3Bucket": {
			"Type": "AWS::S3::Bucket",
			"Properties": {
				"BucketName": "quantiphi-assignment-mohit",
				"AccessControl": "PublicRead"
			}
		},
		"S3AccessRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Statement": [
						{
							"Effect": "Allow",
							"Principal": {
								"Service": [
									"ec2.amazonaws.com"
								]
							},
							"Action": [
								"sts:AssumeRole"
							]
						}
					]
				},
				"Path": "/"
			}
		},
		"S3RolePolicies": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyName": "s3access",
				"PolicyDocument": {
					"Statement": [
						{
							"Effect": "Allow",
							"Action": "s3:*",
							"Resource": "*"
						}
					]
				},
				"Roles": [
					{
						"Ref": "S3AccessRole"
					}
				]
			}
		},
		"S3InstanceProfile": {
			"Type": "AWS::IAM::InstanceProfile",
			"Properties": {
				"Path": "/",
				"Roles": [
					{
						"Ref": "S3AccessRole"
					}
				]
			}
		},
		"WebServerInstance": {
			"Type": "AWS::EC2::Instance",
			"Metadata": {
				"AWS::CloudFormation::Init": {
					"configSets": {
						"InstallAndRun": [
							"Install"
						]
					},
					"Install": {
						"packages": {
							"apt": {
								"apache2": []
							}
						},


						"commands" : {
              					"Replace default apache port (not changing virtual host /etc/apache2/sites-enabled/000-default.conf)" : {
                				"command" : "perl -pi -e 's|"Listen 80"|"Listen 8090"|g' /etc/apache2/ports.conf",
               					"ignoreErrors" : false
						}
              					},

						"files": {
							"/var/www/html/index.html": {
								"content": {
									"Fn::Join": [
										"\n",
										[
											"<h1>Welcome to the AWS CloudFormation Assignment by Mohit Gupta </h1>"
										]
									]
								},
								"mode": "000750",
								"owner": "apache",
								"group": "apache"
							},
							"/etc/cfn/cfn-hup.conf": {
								"content": {
									"Fn::Join": [
										[
											"[main]\n",
											"stack=",
											{
												"Ref": "AWS::StackId"
											},
											"\n",
											"region=",
											{
												"Ref": "AWS::Region"
											},
											"\n"
										]
									]
								},
								"mode": "000400",
								"owner": "root",
								"group": "root"
							},
							"/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
								"content": {
									"Fn::Join": [
										[
											"[cfn-auto-reloader-hook]\n",
											"triggers=post.update\n",
											"path=Resources.WebServerInstance.Metadata.AWS::CloudFormation::Init\n",
											"action=/opt/aws/bin/cfn-init -v ",
											"         --stack ",
											{
												"Ref": "AWS::StackName"
											},
											"         --resource WebServerInstance ",
											"         --configsets InstallAndRun ",
											"         --region ",
											{
												"Ref": "AWS::Region"
											},
											"\n",
											"runas=root\n"
										]
									]
								}
							}
						},
					
						


						"services": {
							"sysvinit": {
								"apache2": {
									"enabled": "true",
									"ensureRunning": "true"
								},
								"cfn-hup": {
									"enabled": "true",
									"ensureRunning": "true",
									"files": [
										"/etc/cfn/cfn-hup.conf",
										"/etc/cfn/hooks.d/cfn-auto-reloader.conf",
										"/etc/apache2/ports.conf"
									]
								}
							}
						}
					}
				}
			},
			"Properties": {
				"ImageId": {
					"Fn::FindInMap": [
						"AWSRegionArch2AMI",
						{
							"Ref": "AWS::Region"
						},
						{
							"Fn::FindInMap": [
								"AWSInstanceType2Arch",
								{
									"Ref": "InstanceType"
								},
								"Arch"
							]
						}
					]
				},
				"InstanceType": {
					"Ref": "InstanceType"
				},
				"SecurityGroups": [
					{
						"Ref": "WebServerSecurityGroup"
					}
				],
				"KeyName": {
					"Ref": "KeyName"
				},
				"IamInstanceProfile": {
					"Ref": "S3InstanceProfile"
				},
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							[
								"#!/bin/bash -xe\n",
								"apt-get update && apt-get upgrade -y\n",
								"apt-get update -y aws-cfn-bootstrap\n",
								"# Install the files and packages from the metadata\n",
								"/opt/aws/bin/cfn-init -v ",
								"         --stack ",
								{
									"Ref": "AWS::StackName"
								},
								"         --resource WebServerInstance ",
								"         --configsets InstallAndRun ",
								"         --region ",
								{
									"Ref": "AWS::Region"
								},
								"\n",
								"# Signal the status from cfn-init\n",
								"/opt/aws/bin/cfn-signal -e $? ",
								"         --stack ",
								{
									"Ref": "AWS::StackName"
								},
								"         --resource WebServerInstance ",
								"         --region ",
								{
									"Ref": "AWS::Region"
								},
								"\n"
							]
						]
					}
				}
			}
		},
		"WebServerSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "Enable HTTP access via port 80",
				"SecurityGroupIngress": [
					{
						"IpProtocol": "tcp",
						"FromPort": "8090",
						"ToPort": "8090",
						"CidrIp": "0.0.0.0/0"
					},
					{
						"IpProtocol": "tcp",
						"FromPort": "80",
						"ToPort": "80",
						"CidrIp": "0.0.0.0/0"
					},
					{
						"IpProtocol": "tcp",
						"FromPort": "22",
						"ToPort": "22",
						"CidrIp": {
							"Ref": "SSHLocation"
						}
					}
				]
			}
		}
	},
	"Outputs": {
		"WebsiteURL": {
			"Description": "URL for newly created Apache server",
			"Value": {
				"Fn::Join": [
					[
						"http://",
						{
							"Fn::GetAtt": [
								"WebServerInstance",
								"PublicIp"
							]
						}
					]
				]
			}
		}
	}
}